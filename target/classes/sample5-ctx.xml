<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
        
	<!-- 
		sample5-config.properties 파일정보 로딩하기
		
		<context:property-placeholder/> 태그 
		 	- 프로퍼티 파일정보를 읽어서 빈(bean)설정파일이나 자바소스에서 제공한다.
		 	- 주요속성
		 		encoding : 문자인코딩 방식을 지정한다.
		 		location : 프로퍼티 파일의 경로를 지정한다.
		 		
		sample5-config.properties 파일의 설정정보를 이용하기
		 	스프링 빈 설정파일에서는 ${키}로 프로퍼티 파일의 설정값을
		 	객체에 주입할 수 있다.		
		 	
		 	classpat: 소스폴더, 리소스폴더, 라이브러리폴더에서 찾는다.
	 -->
	 
	 <context:property-placeholder
	 	file-encoding="utf-8"
	 	location="classpath:sample5-config.properties"/>
	 	
	 <bean id="emailMessageSender" class="com.sample5.EmailMessageSender">
	 	<constructor-arg name="host" value="${mail.host}"></constructor-arg>
	 	<constructor-arg name="port" value="${mail.port}"></constructor-arg>
	 	<constructor-arg name="username" value="${mail.username}"></constructor-arg>
	 	<constructor-arg name="password" value="${mail.password}"></constructor-arg>
	 </bean>
	 
	 <!-- 
	 	인스턴스 변수의 타입이 List, Set, Array, Map 중에 하나일 때 
	 	
	 		<list> 태그는 List객체를 생성한다.
	 		<set> 태그는 Set객체를 생성한다.
	 		<array> 태그는 배열객체를 생성한다.
	 		<map> 태그는 Map객체를 생성한다.
	 		
	 		<ref bean="빈의 이름" />은 빈의 이름에 해당하는 객체를 참조한다.
	  -->
	 <bean id="notificationService" class="com.sample5.NotificationService">
	 	<property name="messageSenders">
	 		<list>
	 			<ref bean="emailMessageSender"/>
	 			<bean class="com.sample5.KakaotalkMessageSender" />
	 		</list>
	 	</property>
	 </bean>
	 <!-- 기본적으로 싱글턴 객체를 만든다. 기능이 있는 객체
	 		* 정보를 담는 객체(예- student, score, product 등)과 같은 객체는 
	 		  싱글턴으로 구현하지 않는다.
	  -->
</beans>